{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { register, login } from '../api/authentication';\nconst loginAsync = createAsyncThunk('account/login', async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  try {\n    const {\n      data\n    } = await login({\n      email,\n      password\n    });\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nconst registerAsync = createAsyncThunk('account/register', async _ref2 => {\n  let {\n    name,\n    email,\n    password\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await register({\n      name,\n      email,\n      password\n    });\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nconst initialState = {\n  user: {},\n  login: {\n    hasLogin: false\n  },\n  status: 'idle'\n};\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    setUserInfo: (state, action) => {\n      state.user = action.payload;\n    },\n    signOut: state => {\n      state.user = {};\n      state.login.hasLogin = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.login.hasLogin = true;\n      state.user = {\n        ...action.payload.data.user\n      };\n    }).addCase(loginAsync.rejected, (state, action) => {\n      state.status = 'error';\n      state.login.hasLogin = false;\n    }).addCase(registerAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(registerAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.login.hasLogin = true;\n      state.user = {\n        ...action.payload.data.user\n      };\n    }).addCase(registerAsync.rejected, (state, action) => {\n      state.status = 'error';\n      state.login.hasLogin = false;\n    });\n  }\n});\nexport { loginAsync, registerAsync };\nexport const {\n  setUserInfo,\n  signOut\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","register","login","loginAsync","email","password","data","err","console","log","registerAsync","name","initialState","user","hasLogin","status","accountSlice","reducers","setUserInfo","state","action","payload","signOut","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/maiwenjie/Desktop/blockchainProject/client/src/redux/accountSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { register, login } from '../api/authentication';\n\nconst loginAsync = createAsyncThunk('account/login', async ({ email, password }) => {\n    try {\n        const { data } = await login({ email, password });\n        return data;\n    } catch (err) {\n        console.log(err);\n    }\n});\n\nconst registerAsync = createAsyncThunk('account/register', async ({ name, email, password }) => {\n    try {\n        const { data } = await register({ name, email, password });\n        return data;\n    } catch (err) {\n        console.log(err);\n    }\n});\n\nconst initialState = {\n    user: {},\n    login: {\n        hasLogin: false,\n    },\n    status: 'idle',\n};\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        setUserInfo: (state, action) => {\n            state.user = action.payload;\n        },\n        signOut: (state) => {\n            state.user = {};\n            state.login.hasLogin = false;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginAsync.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(loginAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.login.hasLogin = true;\n                state.user = { ...action.payload.data.user };\n            })\n            .addCase(loginAsync.rejected, (state, action) => {\n                state.status = 'error';\n                state.login.hasLogin = false;\n            })\n            .addCase(registerAsync.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(registerAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.login.hasLogin = true;\n                state.user = { ...action.payload.data.user };\n            })\n            .addCase(registerAsync.rejected, (state, action) => {\n                state.status = 'error';\n                state.login.hasLogin = false;\n            });\n    },\n});\n\nexport { loginAsync, registerAsync };\n\nexport const { setUserInfo, signOut } = accountSlice.actions;\n\nexport default accountSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}